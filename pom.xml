<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.9-SNAPSHOT</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.culture.scheduler</groupId>
	<artifactId>scheduler</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>scheduler</name>
	<description> Performance information schedule management</description>
	<properties>
		<java.version>1.8</java.version>
		<frontend-src-dir>${project.basedir}/frontend</frontend-src-dir>
		<node-version>v18.14.1</node-version>
		<yarn-version>v1.22.19</yarn-version>
		<frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>${frontend-maven-plugin.version}</version>
		</dependency>
	</dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.12.1</version>
        <!-- frontend-maven-plugin Version -->
        <configuration>
          <workingDirectory>frontend</workingDirectory>
          <!-- React JS 가 설치된 디렉토리 -->
          <installDirectory>target</installDirectory>
          <!-- war & jar 가 생성되는 메이븐 빌드의 타겟 디렉토리 -->
        </configuration>
        <executions>
          <execution>
            <id>install node and yarn</id>
            <goals>
              <goal>install-node-and-yarn</goal>
              <!-- node & npm 설치 -->
            </goals>
            <!-- optional: default phase is "generate-resources" -->
            <configuration>
              <nodeVersion>${node-version}</nodeVersion>
              <!-- 설치할 nodeJs 의 버전 -->
              <yarnVersion>${yarn-version}</yarnVersion>
              <!-- 설치할 npm 의 버전 -->
            </configuration>
          </execution>
          <execution>
            <id>yarn install</id>
            <!-- yarn install 로 package.json 의 모듈을 설치한다. -->
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn run build</id>
            <!-- React Js Build -->
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <!-- 리소스 생성 -->
            <configuration>
              <target>
                <copy todir="${project.build.directory}/classes/static">
                <!-- 복사할 디렉토리 설정 -->
                  <fileset dir="${project.basedir}/frontend/build"/>
                  <!-- 가져올 디렉토리 및 파일 -->
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
              <!-- 복사 실행 -->
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <!-- Build an executable JAR -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.culture.scheduler.scheduler.SchedulerApplication</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
